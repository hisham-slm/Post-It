{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SignupComponent = class SignupComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.msg = '';\n  }\n  passwordVerification() {\n    let password = document.getElementById('password');\n    let confirmPassword = document.getElementById('confirmPassword');\n    let errorMessage = document.getElementById('error');\n    let passwordValidation = true;\n    if (password.value !== confirmPassword.value) {\n      passwordValidation = false;\n      confirmPassword.value = '';\n      errorMessage.innerHTML = \"Passwords Doesn't Match\";\n      return passwordValidation;\n    } else {\n      passwordValidation = true;\n      errorMessage.innerHTML = '';\n      return passwordValidation;\n    }\n  }\n  emailValidation(signUpForm) {\n    if (signUpForm.controls['email'].dirty == false) {\n      return false;\n    } else {\n      console.log(true);\n      return true;\n    }\n  }\n  submit(signUpForm) {\n    this.passwordVerification();\n    this.emailValidation(signUpForm);\n    if (this.passwordVerification() == true && this.emailValidation(signUpForm) == true) {\n      console.log('all is good');\n      this.userService.userSignup(signUpForm.value).subscribe(res => {\n        console.log(res.msg, res.statusCode);\n        console.log(signUpForm);\n        let errorMessage = document.getElementById('error');\n        errorMessage.innerHTML = res.msg;\n      });\n    }\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAYlC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,WAAyB;IAAzB,gBAAW,GAAXA,WAAW;IAF/B,QAAG,GAAY,EAAE;EAE8B;EAI/CC,oBAAoB;IAClB,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAqB;IACtE,IAAIC,eAAe,GAAGF,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAqB;IACpF,IAAIE,YAAY,GAAGH,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAgB;IAClE,IAAIG,kBAAkB,GAAG,IAAI;IAE7B,IAAIL,QAAQ,CAACM,KAAK,KAAKH,eAAe,CAACG,KAAK,EAAE;MAC5CD,kBAAkB,GAAG,KAAK;MAC1BF,eAAe,CAACG,KAAK,GAAG,EAAE;MAC1BF,YAAY,CAACG,SAAS,GAAG,yBAAyB;MAClD,OAAOF,kBAAkB;KAC1B,MACI;MACHA,kBAAkB,GAAG,IAAI;MACzBD,YAAY,CAACG,SAAS,GAAG,EAAE;MAC3B,OAAOF,kBAAkB;;EAE7B;EAEAG,eAAe,CAACC,UAAkB;IAChC,IAAIA,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC,CAACC,KAAK,IAAI,KAAK,EAAC;MAC9C,OAAO,KAAK;KACb,MACG;MACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,OAAO,IAAI;;EAEf;EAKAC,MAAM,CAACL,UAAkB;IACvB,IAAI,CAACV,oBAAoB,EAAE;IAC3B,IAAI,CAACS,eAAe,CAACC,UAAU,CAAC;IAChC,IAAI,IAAI,CAACV,oBAAoB,EAAE,IAAI,IAAI,IAAI,IAAI,CAACS,eAAe,CAACC,UAAU,CAAC,IAAI,IAAI,EAAC;MAClFG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,IAAI,CAACf,WAAW,CAACiB,UAAU,CAACN,UAAU,CAACH,KAAK,CAAC,CAACU,SAAS,CAAEC,GAAwC,IAAG;QAClGL,OAAO,CAACC,GAAG,CAACI,GAAG,CAACC,GAAG,EAACD,GAAG,CAACE,UAAU,CAAC;QACnCP,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;QACvB,IAAIL,YAAY,GAAGH,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAgB;QAClEE,YAAY,CAACG,SAAS,GAAGU,GAAG,CAACC,GAAG;MAElC,CAAC,CAAC;;EAEN;CAGD;AAxDYtB,eAAe,eAL3BD,SAAS,CAAC;EACTyB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACW1B,eAAe,CAwD3B;SAxDYA,eAAe","names":["Component","SignupComponent","constructor","userService","passwordVerification","password","document","getElementById","confirmPassword","errorMessage","passwordValidation","value","innerHTML","emailValidation","signUpForm","controls","dirty","console","log","submit","userSignup","subscribe","res","msg","statusCode","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\angular_project\\devClone\\src\\app\\components\\signup\\signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from 'src/app/services/user.service';\n\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n\n  msg : string = ''\n  \n  constructor(private userService : UserService){}\n  \n\n\n  passwordVerification() {\n    let password = document.getElementById('password') as HTMLInputElement;\n    let confirmPassword = document.getElementById('confirmPassword') as HTMLInputElement;\n    let errorMessage = document.getElementById('error') as HTMLElement;\n    let passwordValidation = true;\n\n    if (password.value !== confirmPassword.value) {\n      passwordValidation = false;\n      confirmPassword.value = '';\n      errorMessage.innerHTML = \"Passwords Doesn't Match\";\n      return passwordValidation\n    } \n    else {\n      passwordValidation = true;\n      errorMessage.innerHTML = ''\n      return passwordValidation\n    }\n  }\n  \n  emailValidation(signUpForm :NgForm){\n    if (signUpForm.controls['email'].dirty == false){\n      return false\n    }\n    else{\n      console.log(true)\n      return true\n    }\n  }\n \n\n\n\n  submit(signUpForm: NgForm) {\n    this.passwordVerification();\n    this.emailValidation(signUpForm);\n    if (this.passwordVerification() == true && this.emailValidation(signUpForm) == true){\n      console.log('all is good')\n      this.userService.userSignup(signUpForm.value).subscribe((res: {statusCode : Number, msg : string})=>{\n        console.log(res.msg,res.statusCode)\n        console.log(signUpForm)\n        let errorMessage = document.getElementById('error') as HTMLElement;\n        errorMessage.innerHTML = res.msg\n        \n      })\n    }\n  }\n\n    \n}\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}