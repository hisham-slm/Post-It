{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth-guard.service\";\nimport * as i2 from \"@angular/router\";\nexport class UserGuardGuard {\n  constructor(userGuard, router) {\n    this.userGuard = userGuard;\n    this.router = router;\n  }\n  canActivate() {\n    if (!this.userGuard.getToken()) {\n      this.router.navigateByUrl('/login');\n    }\n    return this.userGuard.getToken();\n  }\n}\nUserGuardGuard.ɵfac = function UserGuardGuard_Factory(t) {\n  return new (t || UserGuardGuard)(i0.ɵɵinject(i1.AuthGuardService), i0.ɵɵinject(i2.Router));\n};\nUserGuardGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserGuardGuard,\n  factory: UserGuardGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,SAA4B,EAAWC,MAAc;IAArD,cAAS,GAATD,SAAS;IAA8B,WAAM,GAANC,MAAM;EAAW;EAE5EC,WAAW;IAET,IAAG,CAAC,IAAI,CAACF,SAAS,CAACG,QAAQ,EAAE,EAAC;MAC5B,IAAI,CAACF,MAAM,CAACG,aAAa,CAAC,QAAQ,CAAC;;IAIrC,OAAO,IAAI,CAACJ,SAAS,CAACG,QAAQ,EAAE;EAClC;;AAXWL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAO,SAAdP,cAAc;EAAAQ,YAFb;AAAM","names":["UserGuardGuard","constructor","userGuard","router","canActivate","getToken","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["F:\\angular_project\\devClone\\src\\app\\user\\services\\user-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthGuardService } from './auth-guard.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuardGuard implements CanActivate {\n  constructor(private userGuard : AuthGuardService , private router :Router){ }\n\n  canActivate(): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if(!this.userGuard.getToken()){\n      this.router.navigateByUrl('/login')\n    }\n\n\n    return this.userGuard.getToken()\n  }\n\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}