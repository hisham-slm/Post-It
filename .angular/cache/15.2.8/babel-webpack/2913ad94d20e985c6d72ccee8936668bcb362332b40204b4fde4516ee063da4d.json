{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UploadpostService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://127.0.0.1:8000/';\n  }\n  uploadPost(formdata) {\n    return this.http.post(this.baseUrl + 'user/post', formdata);\n  }\n  viewPost() {\n    return this.http.get(this.baseUrl + 'user/get_post');\n  }\n  getProfilePicture(id) {\n    return this.http.post(this.baseUrl + 'user/get_profile_picture/' + id, id);\n  }\n  getProfileDetails(id) {\n    return this.http.get(this.baseUrl + 'user/profile/' + id, id);\n  }\n  addComment(id) {\n    return this.http.post(this.baseUrl + 'user/addcomment', id);\n  }\n  searchProfile(searchKey) {\n    return this.http.get(this.baseUrl + 'user/search/' + searchKey, searchKey);\n  }\n  likePost(userId, postId) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    // Assuming your backend expects userId and postId as properties in the request body\n    const requestData = {\n      userId: userId,\n      postId: postId\n    };\n    return this.http.post(this.baseUrl + 'user/likepost/' + userId + '/' + postId, requestData, {\n      headers: headers\n    });\n  }\n  follow(follower, following) {\n    this.http.post(this.baseUrl + 'user/follow');\n  }\n}\nUploadpostService.ɵfac = function UploadpostService_Factory(t) {\n  return new (t || UploadpostService)(i0.ɵɵinject(i1.HttpClient));\n};\nUploadpostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UploadpostService,\n  factory: UploadpostService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAExB,YAAO,GAAG,wBAAwB;EAFO;EAIzCC,UAAU,CAACC,QAAa;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,WAAW,EAACF,QAAQ,CAAC;EAC5D;EAEAG,QAAQ;IACN,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACF,OAAO,GAAG,eAAe,CAAC;EACtD;EAEAG,iBAAiB,CAACC,EAAM;IACtB,OAAO,IAAI,CAACR,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,2BAA2B,GAACI,EAAE,EAAEA,EAAE,CAAC;EAC1E;EAEAC,iBAAiB,CAACD,EAAM;IACtB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,IAAI,CAACF,OAAO,GAAG,eAAe,GAACI,EAAE,EAACA,EAAE,CAAC;EAC5D;EAEAE,UAAU,CAACF,EAAM;IACf,OAAO,IAAI,CAACR,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAC,iBAAiB,EAACI,EAAE,CAAC;EAC1D;EAEAG,aAAa,CAACC,SAAa;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACM,GAAG,CAAC,IAAI,CAACF,OAAO,GAAG,cAAc,GAAEQ,SAAS,EAACA,SAAS,CAAC;EAC1E;EAEAC,QAAQ,CAACC,MAAW,EAAEC,MAAW;IAC/B,MAAMC,OAAO,GAAG,IAAInB,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IAEF;IACA,MAAMoB,WAAW,GAAG;MAClBH,MAAM,EAAEA,MAAM;MACdC,MAAM,EAAEA;KACT;IAED,OAAO,IAAI,CAACf,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,gBAAgB,GAAGU,MAAM,GAAG,GAAG,GAAGC,MAAM,EAAEE,WAAW,EAAE;MAAED,OAAO,EAAEA;IAAO,CAAE,CAAC;EACnH;EAEAE,MAAM,CAACC,QAAc,EAAEC,SAAc;IACnC,IAAI,CAACpB,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,aAAa,CAAC;EAC9C;;AA9CWN,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAuB,SAAjBvB,iBAAiB;EAAAwB,YAFhB;AAAM","names":["HttpHeaders","UploadpostService","constructor","http","uploadPost","formdata","post","baseUrl","viewPost","get","getProfilePicture","id","getProfileDetails","addComment","searchProfile","searchKey","likePost","userId","postId","headers","requestData","follow","follower","following","factory","providedIn"],"sourceRoot":"","sources":["F:\\angular_project\\devClone\\src\\app\\user\\services\\uploadpost.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserComponent } from '../user.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadpostService {\n\n  constructor(private http : HttpClient) { }\n\n  baseUrl = 'http://127.0.0.1:8000/'\n\n  uploadPost(formdata: any): Observable<any> {\n    return this.http.post(this.baseUrl + 'user/post',formdata)\n  }\n\n  viewPost(): Observable<any>{\n    return this.http.get(this.baseUrl + 'user/get_post')\n  }\n\n  getProfilePicture(id:any) : Observable<any>{\n    return this.http.post(this.baseUrl + 'user/get_profile_picture/'+id ,id)\n  }\n\n  getProfileDetails(id:any) :Observable<any>{\n    return this.http.get(this.baseUrl + 'user/profile/'+id,id)\n  }\n\n  addComment(id:any): Observable<any>{\n    return this.http.post(this.baseUrl+'user/addcomment',id)\n  }\n\n  searchProfile(searchKey:any): Observable<any>{\n    return this.http.get(this.baseUrl + 'user/search/'+ searchKey,searchKey)\n  }\n\n  likePost(userId: any, postId: any): Observable<any> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    // Assuming your backend expects userId and postId as properties in the request body\n    const requestData = {\n      userId: userId,\n      postId: postId,\n    };\n\n    return this.http.post(this.baseUrl + 'user/likepost/' + userId + '/' + postId, requestData, { headers: headers });\n  }\n\n  follow(follower : any, following: any): Observable<any>{\n    this.http.post(this.baseUrl + 'user/follow')\n  }\n\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}